spring:
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: email
            client-name: Naver

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            #            scope: profile_nickname, profile_image
            client-name: Kakao

        provider:
          naver:
            authorization-uri: 'https://nid.naver.com/oauth2.0/authorize'
            token-uri: 'https://nid.naver.com/oauth2.0/token'
            user-info-uri: 'https://openapi.naver.com/v1/nid/me'
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id


  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  cache:
    type: redis

  redis:
    host: ${REDIS_HOST_NAME}
    port: ${REDIS_PORT}

server:
  error:
    include-exception: false
    include-message: always
    include-stacktrace: on_param
    whitelabel.enabled: true

springdoc:
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: method
  use-fqn: true

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    s3:
      bucket: waggle-prod-bucket
    region:
      static: ap-northeast-2
    stack:
      auto: false

app:
  oauth2:
    authorizedRedirectUri: 'http://localhost:3001/auth'
  jwt:
    secret: ${JWT_SECRET}
  server:
    uri: ${SERVER_URI}


mongodb:
  client: ${MONGODB_CLIENT}
  name: ${MONGODB_NAME}

kafka:
  waggle:
    broker: kafka:9092